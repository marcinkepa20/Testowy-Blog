{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/zadania Java/TestowyBlog/frontend/src/Registration.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './Registration.css';\nimport RegistrationAlert from './RegistrationAlert';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.registerUser(event.target.username.value, event.target.password.value);\n    };\n\n    this.registrationAlert = React.createRef();\n  }\n\n  registerUser(username, password) {\n    fetch('http://localhost:8080/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(function (response) {\n      if (response.status === 200) {\n        this.showRegistrationAlert(\"success\", \"User registered!\", \"you can now log in\");\n      } else if (response.status === 422) {\n        this.showRegistrationAlert(\"danger\", \"User already exists!\", \"Please choose different name\");\n      } else {\n        this.showRegistrationAlert(\"danger\", \"User not registered\", \"Something went wrong\");\n      }\n    }.bind(this)).catch(function (error) {\n      console.log(\"danger\", \"Error\", \"something went wrong.\");\n    }.bind(this));\n  }\n\n  showRegistrationAlert(variant, heading, message) {\n    this.registrationAlert.current.setVariant(variant);\n    this.registrationAlert.current.setHeading(heading);\n    this.registrationAlert.current.setMessage(message);\n    this.registrationAlert.current.setVisible(true);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"username\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Form.Control, {\n      autoFocus: true,\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"password\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      size: \"lg\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Register\"))), React.createElement(RegistrationAlert, {\n      ref: this.registrationAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/Users/marcin/Desktop/zadania Java/TestowyBlog/frontend/src/Registration.js"],"names":["React","Component","Form","Button","RegistrationAlert","Registration","constructor","props","handleSubmit","event","preventDefault","registerUser","target","username","value","password","registrationAlert","createRef","fetch","method","headers","body","JSON","stringify","then","response","status","showRegistrationAlert","bind","catch","error","console","log","variant","heading","message","current","setVariant","setHeading","setMessage","setVisible","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport './Registration.css'\nimport RegistrationAlert from './RegistrationAlert';\n\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.registrationAlert = React.createRef();\n\n  }\n\n  handleSubmit = event =>{\n    event.preventDefault();\n    this.registerUser(event.target.username.value,event.target.password.value) \n  }\n\n    registerUser(username, password){\n        fetch('http://localhost:8080/users', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password,\n              })\n        }).then(function(response) { \n            if(response.status === 200) {\n              this.showRegistrationAlert(\"success\",\"User registered!\",\"you can now log in\");\n            }else if(response.status === 422) {\n              this.showRegistrationAlert(\"danger\",\"User already exists!\",\"Please choose different name\");     \n            }\n            else {\n              this.showRegistrationAlert(\"danger\",\"User not registered\",\"Something went wrong\");     \n            }\n            }.bind(this)).catch(function(error){\n              console.log(\"danger\",\"Error\",\"something went wrong.\");\n        }.bind(this));\n    }\n\n    showRegistrationAlert(variant, heading, message){\n      this.registrationAlert.current.setVariant(variant);\n      this.registrationAlert.current.setHeading(heading);\n      this.registrationAlert.current.setMessage(message);\n      this.registrationAlert.current.setVisible(true);\n    }\n\n\n  render() {\n    return (\n      <>\n       <div className = \"Register\">\n      <Form onSubmit = {this.handleSubmit}>\n        <Form.Group controlId = \"username\" size=\"lg\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control autoFocus name = \"username\"/>\n        </Form.Group>\n\n        <Form.Group controlId = \"password\" size=\"lg\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type = \"password\" name = \"password\"/>\n        </Form.Group>\n\n        <Button block size = \"lg\" type = \"submit\">Register</Button>\n      </Form>\n    </div>\n\n    <RegistrationAlert ref = {this.registrationAlert}/>\n    </>\n    )\n  }\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}